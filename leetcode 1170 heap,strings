//Leetcode 1170 heap and strings 

class compare {
public:
    bool operator()(const pair<char,int> &a, const pair<char,int> &b) {
        if(a.first == b.first) {
            return a.second < b.second;  // When chars are equal, prioritize larger index
        }
        return a.first > b.first;  // Min-heap by character
    }
};

class Solution {
public:
    string clearStars(string s) {
        priority_queue<pair<char,int>, vector<pair<char,int>>, compare> pq;
        int n = s.size();

        for (int i = 0; i < n; i++) {
            if (s[i] != '*') {
                pq.push({s[i], i});
            } else {
                if (!pq.empty()) {
                    int idx = pq.top().second;
                    pq.pop();
                    s[idx] = '*';
                }
            }
        }

        string result = "";
        for(int i = 0; i < n; i++) {
            if(s[i] != '*') {
                result += s[i];
            }
        }
        return result;
    }
};
